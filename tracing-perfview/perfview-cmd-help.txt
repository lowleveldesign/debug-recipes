The PerfView application has a number of commands associated with it, each with its own set of parameters and
qualifiers.  They are listed below.  Options that are common to all commands are listed at the end.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView [DataFile]

  View profile data.

  Parameters:
    [DataFile]                           ETL or ETLX file containing profile data.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView run CommandAndArgs ...

  Starts data collection, runs a command and stops.

  Parameters:
    CommandAndArgs ...                   Command to run and arguments (PerfView options must come before run command).

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView collect [DataFile]

  Starts data collection, wait for user input, then stops.

  Parameters:
    [DataFile]                           ETL file containing profile data.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView start [DataFile]

  Starts machine wide profile data collection.

  Parameters:
    [DataFile]                           ETL file containing profile data.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView stop

  Stop collecting profile data (machine wide).  If you specified EventSources with the /Providers qualifier on start you
  should repeat them here to insure manifest rundown.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView mark [Message]

  Add a PerfView 'Mark' event to the event stream with a optional string message

  Parameters:
    [Message]                            The string message to attach to the PerfView Mark event.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView abort

  Insures that any active PerfView sessions are stopped.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView merge [DataFile]

  Combine separate ETL files into a single ETL file (that can be decoded on another machine).

  Parameters:
    [DataFile]                           ETL file containing profile data.

  Qualifiers:
    [-ImageIDsOnly]                      Only perform image ID injection during the merge operation.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView unzip [DataFile]

  Unpack a ZIP file into its ETL file (and possibly its NGEN PDBS) /WPR option can be specified.

  Parameters:
    [DataFile]                           ETL file containing profile data.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView listSessions

  Lists active ETW sessions.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView ListCpuCounters

  Lists the ListCpuCounters CPU counters available on the system (win8+ only).

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView EnableKernelStacks

  On X64 machines if you have problems with broken stacks when the code is executing in the kernel, setting this option
  and rebooting may improve things

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView DisableKernelStacks

  Resets the registry keys set by EnableKernelStack.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView HeapSnapshot Process [DataFile]

  Take a snapshot of the CLR GC heap of a process.

  Parameters:
    Process                              The process ID or Process Name (Exe without extension) of the process take a
                                         heap snapshot.
    [DataFile]                           The name of the file to place the heap snapshot.

  Qualifiers:
    [-SaveETL]                           Save an ETL file along with the GCDump file when dumping the JS Heap.
    [-MaxDumpCountK:250]                 The maximum number of objects (in K or thousands) to place int the .gcDump
                                         file.  Sample sufficiently to hit this metric.
    [-Freeze]                            Freeze the dump while data is taken.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView ForceGC Process

  Forces a GC on the specified process

  Parameters:
    Process                              The process ID or Process Name (Exe without extension) of the process to force
                                         a GC.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView HeapSnapshotFromProcessDump ProcessDumpFile [DataFile]

  Extract the CLR GC heap from a process dump file specified.

  Parameters:
    ProcessDumpFile                      The name of the input process dump file.
    [DataFile]                           The name of the file to place the heap snapshot.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView GuiRun

  Opens the 'Run' dialog box.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView GuiCollect

  Opens the 'Collect' dialog box.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView GuiHeapSnapshot

  Opens the 'TakeHeapSnapshot' dialog box.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView UserCommand CommandAndArgs ...

  Runs a user defined command.  Type 'PerfView UserCommandHelp' to see the help for all the user commands.  See PerfView
  Extensions in the users guide for more on creating user commands.

  Parameters:
    CommandAndArgs ...                   User command to run and any arguments.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView UserCommandHelp

  Displays help for user commands.  Also see Help->User Command Help in the GUI.

-----------------------------------------------------------------------------------------------------------------------
Usage: PerfView CreateExtensionProject [ExtensionName]

  Creates a VS project for creates a perfView extension.

  Parameters:
    [ExtensionName.Global]               The name of the extension (no .DLL)
-----------------------------------------------------------------------------------------------------------------------
Qualifiers global to all commands:

    [-LogFile:STRING]                    Send messages to this file instead launching the GUI.  Intended for batch
                                         scripts and other automation.
    [-BufferSize:256]                    The size the buffers (in MB) the OS should use to store events waiting to be
                                         written to disk.
    [-Circular:0]                        Do Circular logging with a file size in MB.  Zero means non-circular.
    [-BufferSizeMB:256]                  The size the buffers (in MB) the OS should use to store events waiting to be
                                         written to disk.
    [-CircularMB:0]                      Do Circular logging with a file size in MB.  Zero means non-circular.
    [-InMemoryCircularBuffer]            Keeps the circular buffer in memory until the session is stopped.
    [-StackCompression]                  Use stack compression (only on Win 8+) to make collected file smaller.
    [-MaxCollectSec:0]                   Turn off collection (and kill the program if perfView started it) after this
                                         many seconds.  Zero means no timeout.
    [-StopOnPerfCounter:STRING,...]      This is of the form CATEGORY:COUNTERNAME:INSTANCE OP NUM where
                                         CATEGORY:COUNTERNAME:INSTANCE, identify a performance counter (same as
                                         PerfMon), OP is either < or >, and NUM is a number.  When that condition is
                                         true then collection will stop.  You can specify this qualifier more than once
                                         (logical OR).  See 'Stop Trigger' in the users guide for more.
    [-StopOnEventLogMessage:STRING]      Stop when an event log message that matches the given (ignore case) regular
                                         expression is written to the Windows 'Application' event log.  You can specify
                                         a particular event log with the syntax eventLogName@RegExp.  Can be specified
                                         more than once (logical OR).
    [-StopOnEtwEvent:STRING,...]         This is of the form PROVIDER/EVENTNAME;key1=value1;key2=value2...  This option
                                         is quite powerful, See the users guide for more details.
    [-StopOnRequestOverMsec:0]           Trigger a stop of a collect command if there is any IIS request that is longer
                                         than the given number of MSec.
    [-StopOnGCOverMsec:0]                Trigger a stop of a collect command if there is a .NET Garbage Collection (GC)
                                         is longer than the given number of MSec.
    [-StopOnGCSuspendOverMSec:0]         Trigger a stop of a collect command if there is a .NET Garbage Collection (GC)
                                         where suspending for the GC took over the given number of MSec.
    [-StopOnBGCFinalPauseOverMsec:0]     Trigger a stop of a collect command if there is a background .NET Garbage
                                         Collection (GC) whose final pause is longer than the given number of MSec.  To
                                         work correctly, this requires that heap survival and movement tracking is not
                                         enabled.
    [-StopOnAppFabricOverMsec:0]         Trigger a stop of a collect command if there is a AppFabric request is longer
                                         than the given number of MSec.
    [-StopOnException:STRING]            Where the text is a regular expression that will be used to match the full name
                                         and message of the .NET Exception thrown.The empty string represents any
                                         exception.
    [-StopOnGen2GC]                      This will stop on any non-background Gen2 GC from the given process (can be a
                                         process ID or a process Name (exe file name without path or extension) or *
                                         (any process)
    [-Process:STRING]                    A process name (exe file name without directory or extension) or the Decimal
                                         Process ID.  If used with the /StopOn* qualifiers using ETW events, will
                                         restrict events to only that process.
    [-DecayToZeroHours:0]                The trigger value used in StopOnPerfCounter or StopOn*OverMSec will decay to
                                         zero in this interval of time.
    [-MinSecForTrigger:3]                The number of seconds a perf Counter has to be above threshold before it is
                                         considered triggered.
    [-DelayAfterTriggerSec:5]            Wait this number of seconds after a trigger before actually stopping the trace.
    [-CollectMultiple:0]                 Collect Multiple instance (used in conjunction with StopTrigger).
    [-StartOnPerfCounter:STRING,...]     This is of the form CATEGORY:COUNTERNAME:INSTANCE OP NUM where
                                         CATEGORY:COUNTERNAME:INSTANCE, identify a performance counter (same as
                                         PerfMon), OP is either < or >, and NUM is a number.  When that condition is
                                         true then collection will start.  You can specify this qualifier more than
                                         once.  Search for 'MonitorPerfCounter' in the users guide for more.
    [-StopCommand:STRING]                If present this command is executed when a PerfView stops.  It is useful to
                                         stopping other tracing logic external to PerfView.
    [-MonitorPerfCounter:STRING,...]     This is of the form CATEGORY:COUNTERNAME:INSTANCE@NUM where
                                         CATEGORY:COUNTERNAME:INSTANCE, identify a performance counter (same as
                                         PerfMon), and NUM is a number representing seconds.  The @NUM part is optional
                                         and defaults to 2.  The value of the performance counter is logged to the ETL
                                         file as an event ever NUM seconds
    [-CpuSampleMSec:1]                   The interval (MSec) between CPU samples (.125Msec min).
    [-Merge:BOOLEAN]                     Do a merge after stopping collection.
    [-Zip:BOOLEAN]                       Zip the ETL file (implies /Merge).
    [-Wpr]                               Make output mimic WPR (Windows Performance Recorder).  Don't ZIP, make a
                                         .ngenpdbs directory.  This also enables threadTime as well as user mode
                                         providers WPR would normally collect by default.  This option can also be used
                                         On the unzip command.  See 'Working with WPA' in the help for more.
    [-LowPriority]                       Do merging and ZIPing at low priority to minimize impact to system.
    [-NoRundown]                         Don't collect rundown events.  Use only if you know the process of interest has
                                         exited.
    [-FocusProcess:STRING]               Either a decimal process ID or a process name (exe name without path but WITH
                                         extension) to focus ETW commands.All NON-KERNEL providers are only send to this
                                         process (and rundown is only done on this process) which can cut overhead
                                         significantly in some cases.
    [-NoNGenPdbs]                        Don't generate NGEN Pdbs
    [-NoNGenRundown]                     Don't do rundown of symbolic information in NGEN images (only needed pre V4.5).
    [-NoClrRundown]                      Don't do rundown .NET (CLR) rundown information )(for symbolic name lookup).
    [-RundownTimeout:120]                Maximum number of seconds to wait for CLR rundown to complete.
    [-MinRundownTime:0]                  Minimum number of seconds to wait for CLR rundown to complete.
    [-KeepAllEvents]                     A debug option to keep all events, even symbolic rundown events.
    [-MaxEventCount:0]                   Limits the total number of events.  Useful for trimming large ETL files.  1M
                                         typically yields 300-400 Meg of data considered.
    [-SkipMSec:0]                        Skips the first N MSec of the trace.  Useful for trimming large ETL files in
                                         conjunction with the /MaxEventCount qualifier.
    [-StartTime:01.01.0001 00:00:00]     The start date and time used to filter events of the input trace for formats
                                         that support this.
    [-EndTime:01.01.0001 00:00:00]       The end date and time used to filter events of the input trace for formats that
                                         support this.
    [-ContinueOnError]                   Processes bad traces as best it can.
    [-CpuCounters:STRING,...]            A comma separated list of hardware CPU counters specifications NAME:COUNT to
                                         turn on.  See Users guide for details.  See ListCpuCounters for available
                                         sources (Win8 only)
    [-Providers:STRING,...]              Additional providers.  This is comma separated list of
                                         ProviderGuid:Keywords:Level:Stack specs.  This qualifier has the same syntax as
                                         the Additional Providers TextBox in the collection window.  See help on that
                                         for more.
    [-OnlyProviders:STRING,...]          Like the Providers qualifier, but also turns off the default Kernel and CLR
                                         providers.
    [-ThreadTime]                        Shortcut for turning on context switch and readyThread events
    [-GCOnly]                            Turns on JUST GC collections an allocation sampling.
    [-GCCollectOnly]                     Turns on GC collections (no allocation sampling).
    [-DumpHeap]                          Capture a heap snapshot on profile stop
    [-ClrEventLevel:Verbose]             The verbosity for CLR events Legal values: Always, Critical, Error, Warning,
                                         Informational, Verbose.
    [-ClrEvents:Default]                 A comma separated list of .NET CLR events to turn on.  See Users guide for
                                         details.  Legal values: None, GC, GCHandle, Binder, Loader, Jit, NGen,
                                         StartEnumeration, StopEnumeration, Security, AppDomainResourceManagement,
                                         JitTracing, Interop, Contention, Exception, Threading,
                                         JittedMethodILToNativeMap, OverrideAndSuppressNGenEvents, SupressNGen,
                                         JITSymbols, Type, GCHeapDump, GCSampledObjectAllocationHigh,
                                         GCHeapSurvivalAndMovement, GCHeapCollect, GCHeapAndTypeNames, GCHeapSnapshot,
                                         GCSampledObjectAllocationLow, GCAllObjectAllocation, PerfTrack, Stack,
                                         ThreadTransfer, Debugger, Monitoring, Codesymbols, Compilation, Default,
                                         CompilationDiagnostic, MethodDiagnostic, TypeDiagnostic, All.
    [-KernelEvents:Default]              A comma separated list of windows OS kernel events to turn on.  See Users guide
                                         for details.  Legal values: None, Process, Thread, ImageLoad, ProcessCounters,
                                         ContextSwitch, DeferedProcedureCalls, Interrupt, SystemCall, DiskIO,
                                         DiskFileIO, DiskIOInit, Dispatcher, Memory, MemoryHardFaults, VirtualAlloc,
                                         VAMap, NetworkTCPIP, Registry, AdvancedLocalProcedureCalls, SplitIO, Handle,
                                         Driver, OS, Profile, Default, ThreadTime, FileIO, FileIOInit, Verbose, All,
                                         IOQueue, ThreadPriority, ReferenceSet, PMCProfile, NonContainer.
    [-TplEvents:Default]                 A comma separated list of Task Parallel Library (TPL) events to turn on.  See
                                         Users guide for details.  Legal values: None, Tasktransfer, Tasks, Parallel,
                                         Asynccausalityoperation, Asynccausalityrelation, Asynccausalitysynchronouswork,
                                         Taskstops, TasksFlowActivityIds, AsyncMethod, Default.
    [-DotNetAlloc]                       Turns on per-allocation .NET profiling.
    [-DotNetAllocSampled]                Turns on per-allocation .NET profiling, sampling types in a smart way to keep
                                         overhead low.
    [-DotNetCalls]                       Turns on per-call .NET profiling.
    [-DotNetCallsSampled]                Turns on per-call .NET profiling, sampling types in a smart way to keep
                                         overhead low.
    [-DisableInlining]                   Turns off inlining (but only affects processes that start after trace start.
    [-JITInlining]                       Turns on logging of successful and failed JIT inlining attempts.
    [-CCWRefCount]                       Turns on logging of information about .NET Native CCW reference counting.
    [-RuntimeLoading]                    Turn on logging of runtime loading operations.
    [-OSHeapProcess:0]                   Turn on per-allocation profiling of allocation from the OS heap for the process
                                         with the given process ID.
    [-OSHeapExe:STRING]                  Turn on per-allocation profiling of allocation from the OS heap for the process
                                         with the given EXE (only filename WITH extension).
    [-NetworkCapture]                    Captures the full data of every network packet entering or leaving the OS.
    [-NetMonCapture]                     Create _netmon.etl file that NetMon.exe can read, along with the standard ETL
                                         file.  Implies /NetworkCapture.
    [-ForceNgenRundown]                  By default on a V4.0 runtime NGEN rundown is suppressed, because NGEN PDB are a
                                         less expensive way of getting symbolic information for NGEN images.  This
                                         option forces NGEN rundown, so NGEN PDBs are not needed.  This can be useful in
                                         some scenarios where NGEN PDB are not working properly.
    [-NoV2Rundown]                       Don't do rundown for .NET (CLR) V2 processes.
    [-TrustPdbs]                         Normally PerfView does not trust PDBs outside the _NT_SYMBOL_PATH and pops a
                                         dialog box.  Suppress this.
    [-AcceptEULA]                        Accepts the EULA associated with PerfView.
    [-DataFile:STRING]                   FileName of the profile data to generate.
    [-NoView]                            Normally after collecting data the data is viewed.  This suppresses that.
    [-UnsafePDBMatch]                    Allow the use of PDBs even when the trace does not contain PDB signatures.
    [-ShowUnknownAddresses]              Displays the hexadecimal address rather than ? when the address is unknown.
    [-ShowOptimizationTiers]             Displays the optimization tier of each code version executed for the method.
    [-NoGui]                             Use the Command line version of the command (like on ARM).  Brings up a console
                                         window.  For batch scripts/automation use /LogFile instead (see users guide
                                         under 'Scripting' for more).
    [-SafeMode]                          Turn off parallelism and other risky features.
    [-RestartingToElevelate:STRING]      Internal: indicates that perfView is restarting to get Admin privileges.
    [-SessionName:STRING]                Define the name for the user mode session (kernel session will also be named
                                         analogously) Useful for collecting traces when another ETW profiler (including
                                         PerfView) is being used.
    [-MaxNodeCountK:0]                   The maximum number of objects (in K or thousands) that will even be examined
                                         when dumping the heap.  Avoids memory use at collection time.  This is useful
                                         if heap dumping causes out of memory exceptions.
    [-EnableEventsInContainers]          Enable user mode events inside of containers to flow back to the host for
                                         collection.
    [-EnableSourceContainerTracking]     Emit the container ID as part of the payload of each usermode event emitted
                                         inside of a container.

